version: '3.4'

services:
  postgres:
    container_name: ${CONTAINER_NAME:-postgres}
    hostname: ${CONTAINER_NAME:-postgres}
    image: postgres:latest
    volumes:
      - ./${DATA_FOLDER:-db_data}:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d  # Mounting the init script
      - ./backup:/backup
      - ./archive:/archive
    environment:
      - POSTGRES_PASSWORD=${DB_PASS:-postgres123}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-dblab}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - ${PORT:-5434}:5432
    restart: always
    networks:
      - services

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - services
    volumes: 
      - ./kafka_volume/zoo/data:/var/lib/zookeeper/data:z
      - ./kafka_volume/zoo/log:/var/lib/zookeeper/log:z

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes: 
      - ./kafka_volume/broker/data:/var/lib/kafka/data:z
    networks:
      - services

networks:
  services:
    name: ${APP_NAME:-filoger}_network
